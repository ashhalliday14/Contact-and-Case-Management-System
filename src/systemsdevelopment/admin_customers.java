/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package systemsdevelopment;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ashleigh.halliday
 */
public class admin_customers extends javax.swing.JFrame {
    
    int currentCustomer = 0;
    ArrayList<Customer> customers = new ArrayList<Customer>();
    DefaultComboBoxModel genderTypeModel = new DefaultComboBoxModel();

    /**
     * Creates new form admin_customers
     */
    public admin_customers() {
        initComponents();
        refreshData();
    }
    
    //refresh data from database
    public void refreshData(){
        try {
            //JOptionPane.showMessageDialog(null, "clear array");
            customers.clear(); //clear users array list
            
            //JOptionPane.showMessageDialog(null, "string sql get types");
            String sqlGetTypes = "SELECT * FROM tbl_customer"; //select all data from db 
            
            //JOptionPane.showMessageDialog(null, "connection");
            Connection conn = db.Connect(); //connection to db
            
            //JOptionPane.showMessageDialog(null, "ps");
            PreparedStatement psGetUsers = conn.prepareStatement(sqlGetTypes);
            
            ResultSet rs = psGetUsers.executeQuery();
            
            //JOptionPane.showMessageDialog(null, "while loop");
            while (rs.next()){ //filter through users
                Customer c = new Customer(rs.getInt("customerID"), rs.getString("firstName"), rs.getString("surname"), rs.getString("dob"),
                            rs.getString("gender"), rs.getString("addressLine1"), rs.getString("town"), rs.getString("county"), rs.getString("postcode"),
                            rs.getString("phoneNumber"), rs.getString("emailAddress"), rs.getString("nameOnCard"), rs.getString("cardNumber"), rs.getString("expiryDate"), rs.getInt("CVVNumber"));
                customers.add(c);
                //JOptionPane.showMessageDialog(null, c);
            }
            
            //JOptionPane.showMessageDialog(null, "execute query");
            rs = psGetUsers.executeQuery();
            
            this.comboBoxGender.removeAllItems();
            
            //JOptionPane.showMessageDialog(null, "while 2.0");
            while(rs.next()){
                genderTypeModel.addElement(new ComboBoxItem(rs.getInt("customerID"), rs.getString("gender")));
            }
            //JOptionPane.showMessageDialog(null, "for loop");
            JOptionPane.showMessageDialog(null, genderTypeModel);
            for (int i = 0; i < genderTypeModel.getSize(); i++){
                JOptionPane.showMessageDialog(null, i);
                ComboBoxItem cbi = (ComboBoxItem)genderTypeModel.getElementAt(i); //create object of type combo box item
                if (cbi.getId() == customers.get(currentCustomer).getCustomerID()){
                    genderTypeModel.setSelectedItem(cbi);
                }
            }
            
            this.comboBoxGender.setModel(genderTypeModel);
            
            this.txtCustomerID.setText(String.valueOf(customers.get(currentCustomer).getCustomerID()));
            this.txtFirstName.setText(String.valueOf(customers.get(currentCustomer).getFirstName()));
            this.txtSurname.setText(String.valueOf(customers.get(currentCustomer).getSurname()));
            this.txtDOB.setText(String.valueOf(customers.get(currentCustomer).getDob()));
            this.txtAddressLine1.setText(String.valueOf(customers.get(currentCustomer).getAddressLine1()));
            this.txtTown.setText(String.valueOf(customers.get(currentCustomer).getTown()));
            this.txtCounty.setText(String.valueOf(customers.get(currentCustomer).getCounty()));
            this.txtPostcode.setText(String.valueOf(customers.get(currentCustomer).getPostcode()));
            this.txtPhoneNumber.setText(String.valueOf(customers.get(currentCustomer).getPhoneNumber()));
            this.txtEmailAddress.setText(String.valueOf(customers.get(currentCustomer).getEmailAddress()));
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, "Cannot get customers at this time. Error: " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageCustomers = new javax.swing.JLabel();
        btnReturnHome = new javax.swing.JButton();
        lblCustomerID = new javax.swing.JLabel();
        lblFirstName = new javax.swing.JLabel();
        lblSurname = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        lblGender = new javax.swing.JLabel();
        lblAddressLine1 = new javax.swing.JLabel();
        lblTown = new javax.swing.JLabel();
        lblCounty = new javax.swing.JLabel();
        lblPostcode = new javax.swing.JLabel();
        lblPhoneNumber = new javax.swing.JLabel();
        lblEmailAddress = new javax.swing.JLabel();
        btnCreateCustomer = new javax.swing.JButton();
        btnUpdateCustomer = new javax.swing.JButton();
        btnDeleteCustomer = new javax.swing.JButton();
        txtCustomerID = new javax.swing.JTextField();
        txtFirstName = new javax.swing.JTextField();
        btnPreviousCustomer = new javax.swing.JButton();
        btnNextCustomer = new javax.swing.JButton();
        txtSurname = new javax.swing.JTextField();
        txtDOB = new javax.swing.JTextField();
        txtAddressLine1 = new javax.swing.JTextField();
        txtTown = new javax.swing.JTextField();
        txtCounty = new javax.swing.JTextField();
        txtPostcode = new javax.swing.JTextField();
        txtPhoneNumber = new javax.swing.JTextField();
        txtEmailAddress = new javax.swing.JTextField();
        comboBoxGender = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblManageCustomers.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblManageCustomers.setText("Manage Customers");

        btnReturnHome.setText("Return Home");
        btnReturnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnHomeActionPerformed(evt);
            }
        });

        lblCustomerID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCustomerID.setText("Customer ID:");

        lblFirstName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFirstName.setText("First Name:");

        lblSurname.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSurname.setText("Surname:");

        lblDOB.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDOB.setText("DOB:");

        lblGender.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblGender.setText("Gender:");

        lblAddressLine1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblAddressLine1.setText("Address Line 1:");

        lblTown.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTown.setText("Town:");

        lblCounty.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCounty.setText("County:");

        lblPostcode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPostcode.setText("Postcode:");

        lblPhoneNumber.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPhoneNumber.setText("Phone Number:");

        lblEmailAddress.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmailAddress.setText("Email Address:");

        btnCreateCustomer.setText("Create Customer");
        btnCreateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateCustomerActionPerformed(evt);
            }
        });

        btnUpdateCustomer.setText("Update Customer");
        btnUpdateCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCustomerActionPerformed(evt);
            }
        });

        btnDeleteCustomer.setText("Delete Customer");

        btnPreviousCustomer.setText("<");
        btnPreviousCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousCustomerActionPerformed(evt);
            }
        });

        btnNextCustomer.setText(">");
        btnNextCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextCustomerActionPerformed(evt);
            }
        });

        comboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addComponent(lblManageCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCustomerID)
                    .addComponent(lblFirstName)
                    .addComponent(lblSurname)
                    .addComponent(lblDOB)
                    .addComponent(lblGender)
                    .addComponent(lblAddressLine1)
                    .addComponent(lblTown)
                    .addComponent(lblCounty)
                    .addComponent(lblPostcode)
                    .addComponent(lblPhoneNumber)
                    .addComponent(lblEmailAddress))
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCustomerID)
                    .addComponent(txtFirstName)
                    .addComponent(txtSurname)
                    .addComponent(txtDOB)
                    .addComponent(txtAddressLine1)
                    .addComponent(txtTown)
                    .addComponent(txtCounty)
                    .addComponent(txtPostcode)
                    .addComponent(txtPhoneNumber)
                    .addComponent(txtEmailAddress)
                    .addComponent(comboBoxGender, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPreviousCustomer)
                        .addGap(27, 27, 27)
                        .addComponent(btnUpdateCustomer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                        .addComponent(btnDeleteCustomer)
                        .addGap(32, 32, 32)
                        .addComponent(btnNextCustomer)
                        .addGap(23, 23, 23))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnReturnHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreateCustomer)
                        .addGap(34, 34, 34))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturnHome)
                    .addComponent(btnCreateCustomer))
                .addGap(42, 42, 42)
                .addComponent(lblManageCustomers)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerID)
                    .addComponent(txtCustomerID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFirstName)
                    .addComponent(txtFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSurname)
                    .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDOB)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(comboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddressLine1)
                    .addComponent(txtAddressLine1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTown)
                    .addComponent(txtTown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCounty)
                    .addComponent(txtCounty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPostcode)
                    .addComponent(txtPostcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNumber)
                    .addComponent(txtPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailAddress)
                    .addComponent(txtEmailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateCustomer)
                    .addComponent(btnDeleteCustomer)
                    .addComponent(btnPreviousCustomer)
                    .addComponent(btnNextCustomer))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //user clicks to return home
    private void btnReturnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnHomeActionPerformed
        setVisible(false);
        new adminDashboard().setVisible(true);
    }//GEN-LAST:event_btnReturnHomeActionPerformed

    //create a new customer button
    private void btnCreateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateCustomerActionPerformed
        setVisible(false);
        new admin_customers_create().setVisible(true);
    }//GEN-LAST:event_btnCreateCustomerActionPerformed

    //next customer record
    private void btnNextCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextCustomerActionPerformed
        if (currentCustomer != customers.size()-1){
            currentCustomer++;
            
            for (int i = 0; i < genderTypeModel.getSize(); i++){
                ComboBoxItem o = (ComboBoxItem)genderTypeModel.getElementAt(i);
                if (o.getId() == customers.get(currentCustomer).getCustomerID()){
                    genderTypeModel.setSelectedItem(o);
                }
            }
        }
        this.comboBoxGender.setModel(genderTypeModel);
        
        for (int i = 0; i < genderTypeModel.getSize(); i++){
            ComboBoxItem o = (ComboBoxItem)genderTypeModel.getElementAt(i);
            if (o.getId() == customers.get(currentCustomer).getCustomerID()){
                genderTypeModel.setSelectedItem(o);
            }
        }
        this.comboBoxGender.setModel(genderTypeModel);
            
        this.txtCustomerID.setText(String.valueOf(customers.get(currentCustomer).getCustomerID()));
        this.txtFirstName.setText(String.valueOf(customers.get(currentCustomer).getFirstName()));
        this.txtSurname.setText(String.valueOf(customers.get(currentCustomer).getSurname()));
        this.txtDOB.setText(String.valueOf(customers.get(currentCustomer).getDob()));
        this.txtAddressLine1.setText(String.valueOf(customers.get(currentCustomer).getAddressLine1()));
        this.txtTown.setText(String.valueOf(customers.get(currentCustomer).getTown()));
        this.txtCounty.setText(String.valueOf(customers.get(currentCustomer).getCounty()));
        this.txtPostcode.setText(String.valueOf(customers.get(currentCustomer).getPostcode()));
        this.txtPhoneNumber.setText(String.valueOf(customers.get(currentCustomer).getPhoneNumber()));
        this.txtEmailAddress.setText(String.valueOf(customers.get(currentCustomer).getEmailAddress()));
        
    }//GEN-LAST:event_btnNextCustomerActionPerformed

    //previous customer record
    private void btnPreviousCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousCustomerActionPerformed
        if (currentCustomer != 0){
            currentCustomer--;
            
            for (int i = 0; i < genderTypeModel.getSize(); i++){
                ComboBoxItem o = (ComboBoxItem)genderTypeModel.getElementAt(i);
                if (o.getId() == customers.get(currentCustomer).getCustomerID()){
                    genderTypeModel.setSelectedItem(o);
                }
            }
        }
        this.comboBoxGender.setModel(genderTypeModel);
        
        for (int i = 0; i < genderTypeModel.getSize(); i++){
            ComboBoxItem o = (ComboBoxItem)genderTypeModel.getElementAt(i);
            if (o.getId() == customers.get(currentCustomer).getCustomerID()){
                genderTypeModel.setSelectedItem(o);
            }
        }
        this.comboBoxGender.setModel(genderTypeModel);
            
        this.txtCustomerID.setText(String.valueOf(customers.get(currentCustomer).getCustomerID()));
        this.txtFirstName.setText(String.valueOf(customers.get(currentCustomer).getFirstName()));
        this.txtSurname.setText(String.valueOf(customers.get(currentCustomer).getSurname()));
        this.txtDOB.setText(String.valueOf(customers.get(currentCustomer).getDob()));
        this.txtAddressLine1.setText(String.valueOf(customers.get(currentCustomer).getAddressLine1()));
        this.txtTown.setText(String.valueOf(customers.get(currentCustomer).getTown()));
        this.txtCounty.setText(String.valueOf(customers.get(currentCustomer).getCounty()));
        this.txtPostcode.setText(String.valueOf(customers.get(currentCustomer).getPostcode()));
        this.txtPhoneNumber.setText(String.valueOf(customers.get(currentCustomer).getPhoneNumber()));
        this.txtEmailAddress.setText(String.valueOf(customers.get(currentCustomer).getEmailAddress()));
        
    }//GEN-LAST:event_btnPreviousCustomerActionPerformed

    //navigate to update customer page
    private void btnUpdateCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCustomerActionPerformed
        //String customerID = txtCustomerID.getText();
        //customerID = currentCustomer.getCustomerID();
        //this.txtCustomerID.setText(String.valueOf(customers.get(currentCustomer).getCustomerID()));
        //JOptionPane.showMessageDialog(null, "The user id for this user is " + customerID);
        admin_customers_update acu = new admin_customers_update();
        acu.txtEnterFirstName.setText(txtFirstName.getText());
        JOptionPane.showMessageDialog(null, txtFirstName);
        acu.txtEnterSurname.setText(txtSurname.getText());
        JOptionPane.showMessageDialog(null, txtSurname);
        acu.txtEnterDOB.setText(txtDOB.getText());
        JOptionPane.showMessageDialog(null, txtDOB);
        acu.txtEnterAddressLine1.setText(txtAddressLine1.getText());
        JOptionPane.showMessageDialog(null, txtAddressLine1);
        acu.txtEnterTown.setText(txtTown.getText());
        JOptionPane.showMessageDialog(null, txtTown);
        acu.txtEnterCounty.setText(txtCounty.getText());
        JOptionPane.showMessageDialog(null, txtCounty);
        acu.txtEnterPostcode.setText(txtPostcode.getText());
        JOptionPane.showMessageDialog(null, txtPostcode);
        acu.txtEnterPhoneNumber.setText(txtPhoneNumber.getText());
        JOptionPane.showMessageDialog(null, txtPhoneNumber);
        acu.txtEnterEmailAddress.setText(txtEmailAddress.getText());
        JOptionPane.showMessageDialog(null, txtEmailAddress);
        setVisible(false);
        new admin_customers_update().setVisible(true);
        
        //new admin_customers_update().setVisible(true);
    }//GEN-LAST:event_btnUpdateCustomerActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_customers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_customers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateCustomer;
    private javax.swing.JButton btnDeleteCustomer;
    private javax.swing.JButton btnNextCustomer;
    private javax.swing.JButton btnPreviousCustomer;
    private javax.swing.JButton btnReturnHome;
    private javax.swing.JButton btnUpdateCustomer;
    protected javax.swing.JComboBox<String> comboBoxGender;
    private javax.swing.JLabel lblAddressLine1;
    private javax.swing.JLabel lblCounty;
    private javax.swing.JLabel lblCustomerID;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblEmailAddress;
    private javax.swing.JLabel lblFirstName;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblManageCustomers;
    private javax.swing.JLabel lblPhoneNumber;
    private javax.swing.JLabel lblPostcode;
    private javax.swing.JLabel lblSurname;
    private javax.swing.JLabel lblTown;
    protected javax.swing.JTextField txtAddressLine1;
    protected javax.swing.JTextField txtCounty;
    protected javax.swing.JTextField txtCustomerID;
    protected javax.swing.JTextField txtDOB;
    protected javax.swing.JTextField txtEmailAddress;
    protected javax.swing.JTextField txtFirstName;
    protected javax.swing.JTextField txtPhoneNumber;
    protected javax.swing.JTextField txtPostcode;
    protected javax.swing.JTextField txtSurname;
    protected javax.swing.JTextField txtTown;
    // End of variables declaration//GEN-END:variables
}
