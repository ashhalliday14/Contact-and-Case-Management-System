/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package systemsdevelopment;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author ashleigh.halliday
 */
public class admin_system_users extends javax.swing.JFrame {

    int currentUser = 0;
    ArrayList<User> users = new ArrayList<User>();
    DefaultComboBoxModel roleTypeModel = new DefaultComboBoxModel();
    /**
     * Creates new form admin_system_users
     */
    public admin_system_users() {
        initComponents();
        refreshData();
    }
    
    //refresh data from database
    public void refreshData(){
        try {
            //JOptionPane.showMessageDialog(null, "clear array");
            users.clear(); //clear users array list
            
            //JOptionPane.showMessageDialog(null, "string sql get types");
            String sqlGetTypes = "SELECT * FROM tbl_login"; //select all data from db 
            
            //JOptionPane.showMessageDialog(null, "connection");
            Connection conn = db.Connect(); //connection to db
            
            //JOptionPane.showMessageDialog(null, "ps");
            PreparedStatement psGetUsers = conn.prepareStatement(sqlGetTypes);
            
            ResultSet rs = psGetUsers.executeQuery();
            
            //JOptionPane.showMessageDialog(null, "while loop");
            while (rs.next()){ //filter through users
                User u = new User(rs.getInt("id"), rs.getString("username"), rs.getString("password"), rs.getString("role"));
                users.add(u);
                //JOptionPane.showMessageDialog(null, u);
            }
            
            rs = psGetUsers.executeQuery();
            
            this.comboBoxUserRole.removeAllItems();
            
            //JOptionPane.showMessageDialog(null, "while 2.0");
            while(rs.next()){
                roleTypeModel.addElement(new ComboBoxItem(rs.getInt("id"), rs.getString("username")));
            }
            //JOptionPane.showMessageDialog(null, "for loop");
            for (int i = 0; i < roleTypeModel.getSize(); i++){
                //JOptionPane.showMessageDialog(null, i);
                ComboBoxItem cbi = (ComboBoxItem)roleTypeModel.getElementAt(i); //create object of type combo box item
                if (cbi.getId() == users.get(currentUser).getLoginID()){
                    roleTypeModel.setSelectedItem(cbi);
                }
            }
            
            this.comboBoxUserRole.setModel(roleTypeModel);
            
            this.txtUserID.setText(String.valueOf(users.get(currentUser).getLoginID()));
            this.txtUsername.setText(String.valueOf(users.get(currentUser).getUsername()));
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, "Cannot get users at this time. Error: " + e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageSystemUsers = new javax.swing.JLabel();
        btnReturnHome = new javax.swing.JButton();
        lblUserID = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblRole = new javax.swing.JLabel();
        txtUserID = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        comboBoxUserRole = new javax.swing.JComboBox<>();
        btnCreateUser = new javax.swing.JButton();
        btnUpdateUser = new javax.swing.JButton();
        benDeleteUser = new javax.swing.JButton();
        btnNextUser = new javax.swing.JButton();
        btnPreviousUser = new javax.swing.JButton();
        btnSaveChanges = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblManageSystemUsers.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblManageSystemUsers.setText("Manage System Users");

        btnReturnHome.setText("Return Home");
        btnReturnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnHomeActionPerformed(evt);
            }
        });

        lblUserID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblUserID.setText("User ID:");

        lblUsername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblUsername.setText("Username:");

        lblRole.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblRole.setText("Role:");

        comboBoxUserRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Team Leader", "Agent" }));
        comboBoxUserRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxUserRoleActionPerformed(evt);
            }
        });

        btnCreateUser.setText("Create New User");
        btnCreateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateUserActionPerformed(evt);
            }
        });

        btnUpdateUser.setText("Update User");
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });

        benDeleteUser.setText("Delete User");
        benDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                benDeleteUserActionPerformed(evt);
            }
        });

        btnNextUser.setText(">");
        btnNextUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextUserActionPerformed(evt);
            }
        });

        btnPreviousUser.setText("<");
        btnPreviousUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousUserActionPerformed(evt);
            }
        });

        btnSaveChanges.setText("Save Changes");
        btnSaveChanges.setActionCommand("Save Changes");
        btnSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveChangesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnReturnHome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCreateUser))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(159, 159, 159)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblManageSystemUsers)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(benDeleteUser)
                                .addGap(57, 57, 57)
                                .addComponent(btnNextUser)))
                        .addGap(0, 24, Short.MAX_VALUE)))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblRole)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblUsername)
                                        .addComponent(lblUserID))
                                    .addGap(60, 60, 60)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(comboBoxUserRole, javax.swing.GroupLayout.Alignment.LEADING, 0, 269, Short.MAX_VALUE)
                                        .addComponent(txtUserID))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnPreviousUser)
                                .addGap(54, 54, 54)
                                .addComponent(btnUpdateUser)
                                .addGap(214, 214, 214))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(btnSaveChanges)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturnHome)
                    .addComponent(btnCreateUser))
                .addGap(34, 34, 34)
                .addComponent(lblManageSystemUsers)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUserID)
                            .addComponent(txtUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(lblUsername))
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRole)
                    .addComponent(comboBoxUserRole, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateUser)
                    .addComponent(benDeleteUser)
                    .addComponent(btnNextUser)
                    .addComponent(btnPreviousUser))
                .addGap(35, 35, 35)
                .addComponent(btnSaveChanges)
                .addContainerGap(134, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //return to admin homepage
    private void btnReturnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnHomeActionPerformed
        setVisible(false);
        new adminDashboard().setVisible(true);
    }//GEN-LAST:event_btnReturnHomeActionPerformed

    private void comboBoxUserRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxUserRoleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxUserRoleActionPerformed

    //create new user button
    private void btnCreateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateUserActionPerformed
        setVisible(false);
        new admin_system_users_create().setVisible(true);
    }//GEN-LAST:event_btnCreateUserActionPerformed

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    //user clicks the delete user button
    private void benDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_benDeleteUserActionPerformed
        int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this user?");
        
        if (confirm == JOptionPane.YES_OPTION){
            try{
                Connection conn = db.Connect();
                
                String sqlDeleteUser = "DELETE FROM tbl_login WHERE id = ?";
                PreparedStatement ps = conn.prepareStatement(sqlDeleteUser);
                ps.setString(1, String.valueOf(users.get(currentUser).getLoginID()));
                
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null, "User has been successfully deleted");
            }
            catch (Exception e){
                JOptionPane.showMessageDialog(null, "User could not be deleted. Please try again. Error " + e);
            }
        
        currentUser = 0;
        this.refreshData();
        }
        else{
            JOptionPane.showMessageDialog(null, "User not deleted");
        }
    }//GEN-LAST:event_benDeleteUserActionPerformed

    //next user record
    private void btnNextUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextUserActionPerformed
        if (currentUser != users.size()-1){
            currentUser++;
            
            for (int i = 0; i < roleTypeModel.getSize(); i++){
                ComboBoxItem o = (ComboBoxItem)roleTypeModel.getElementAt(i);
                if (o.getId() == users.get(currentUser).getLoginID()){
                    roleTypeModel.setSelectedItem(o);
                }
            }
        }
        this.comboBoxUserRole.setModel(roleTypeModel);
        
        for (int i = 0; i < roleTypeModel.getSize(); i++){
            ComboBoxItem o = (ComboBoxItem)roleTypeModel.getElementAt(i);
            if (o.getId() == users.get(currentUser).getLoginID()){
                roleTypeModel.setSelectedItem(o);
            }
        }
        this.comboBoxUserRole.setModel(roleTypeModel);
            
        this.txtUserID.setText(String.valueOf(users.get(currentUser).getLoginID()));
        this.txtUsername.setText(String.valueOf(users.get(currentUser).getUsername()));
    }//GEN-LAST:event_btnNextUserActionPerformed

    //previous user record
    private void btnPreviousUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousUserActionPerformed
        if (currentUser != 0){
            currentUser--;
            
            for (int i = 0; i < roleTypeModel.getSize(); i++){
                ComboBoxItem o = (ComboBoxItem)roleTypeModel.getElementAt(i);
                if (o.getId() == users.get(currentUser).getLoginID()){
                    roleTypeModel.setSelectedItem(o);
                }
            }
        }
        this.comboBoxUserRole.setModel(roleTypeModel);
        
        for (int i = 0; i < roleTypeModel.getSize(); i++){
            ComboBoxItem o = (ComboBoxItem)roleTypeModel.getElementAt(i);
            if (o.getId() == users.get(currentUser).getLoginID()){
                roleTypeModel.setSelectedItem(o);
            }
        }
        this.comboBoxUserRole.setModel(roleTypeModel);
            
        this.txtUserID.setText(String.valueOf(users.get(currentUser).getLoginID()));
        this.txtUsername.setText(String.valueOf(users.get(currentUser).getUsername()));
    }//GEN-LAST:event_btnPreviousUserActionPerformed

    //save changes made to users
    private void btnSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveChangesActionPerformed
        try{
            String userID = txtUserID.getText(); //get userID
            String username = txtUsername.getText(); //get username
            ComboBoxItem role = (ComboBoxItem)roleTypeModel.getSelectedItem(); //get the users role from combo box
            
            Connection conn = db.Connect(); //database connection 
            String updateSql = "UPDATE tbl_login "  
                             + "SET    username=?, role=? "
                             + "WHERE  id=?";  
            PreparedStatement ps = conn.prepareStatement(updateSql);
            ps.setString(1, username);
            ps.setString(2, String.valueOf(role));
            ps.setString(3, userID);
            
            JOptionPane.showMessageDialog(null, updateSql);
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Your changes have been saved successfully");
        }
        catch (Exception e){
            JOptionPane.showMessageDialog(null, "Unable to save the changes made to this user. Error: " + e);
        }
        this.refreshData();
    }//GEN-LAST:event_btnSaveChangesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin_system_users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin_system_users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin_system_users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin_system_users.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin_system_users().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton benDeleteUser;
    private javax.swing.JButton btnCreateUser;
    private javax.swing.JButton btnNextUser;
    private javax.swing.JButton btnPreviousUser;
    private javax.swing.JButton btnReturnHome;
    private javax.swing.JButton btnSaveChanges;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JComboBox<String> comboBoxUserRole;
    private javax.swing.JLabel lblManageSystemUsers;
    private javax.swing.JLabel lblRole;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JTextField txtUserID;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
